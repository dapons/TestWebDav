//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestWebAppDomain.DAL
{
    using System;
    using System.Collections.Generic;
    
    public partial class Fragment
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Fragment()
        {
            this.FragBranches = new HashSet<FragBranch>();
            this.FragLocks = new HashSet<FragLock>();
            this.FragLocks1 = new HashSet<FragLock>();
            this.Fragment1 = new HashSet<Fragment>();
            this.FragRefs = new HashSet<FragRef>();
        }
    
        public byte[] FragContent { get; set; }
        public double Priority { get; set; }
        public string FragName { get; set; }
        public string Lang { get; set; }
        public string BankGroup { get; set; }
        public string Bank { get; set; }
        public string UserGroup { get; set; }
        public string Layout { get; set; }
        public string Modul { get; set; }
        public string ProdGroup { get; set; }
        public string ProdSubGroup { get; set; }
        public string Product { get; set; }
        public string CustomerOp { get; set; }
        public string Condition1 { get; set; }
        public string Condition2 { get; set; }
        public string Condition3 { get; set; }
        public string Condition4 { get; set; }
        public string Condition5 { get; set; }
        public string Condition6 { get; set; }
        public bool IsDeleted { get; set; }
        public int FragTypeId { get; set; }
        public string ContentText { get; set; }
        public string MetaData { get; set; }
        public bool IsCertified { get; set; }
        public string FragAlias { get; set; }
        public string Culture { get; set; }
        public string Condition7 { get; set; }
        public Nullable<int> CommitmentId { get; set; }
        public bool IsClone { get; set; }
        public Nullable<int> FragReviewId { get; set; }
        public byte FragStateId { get; set; }
        public Nullable<int> ReviewInProgressId { get; set; }
        public int Id { get; set; }
        public Nullable<int> PrevFragId { get; set; }
        public byte[] Version { get; set; }
        public bool IsStatic { get; set; }
        public string AppContext { get; set; }
        public byte[] FragHash { get; set; }
        public Nullable<bool> Translate { get; set; }
    
        public virtual Commitment Commitment { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FragBranch> FragBranches { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FragLock> FragLocks { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FragLock> FragLocks1 { get; set; }
        public virtual FragType FragType { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Fragment> Fragment1 { get; set; }
        public virtual Fragment Fragment2 { get; set; }
        public virtual FragReview FragReview { get; set; }
        public virtual FragReviewInProgress FragReviewInProgress { get; set; }
        public virtual FragState FragState { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FragRef> FragRefs { get; set; }
    }
}
